%% File : ReadCalibration.tlc
%%
%% Description: 
%%   Simulink Coder TLC Code Generation file for ReadCalibration
%%
%% Simulink version      : 8.3 (R2014a) 27-Dec-2013
%% TLC file generated on : 05-Jun-2014 15:37:36

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'ReadCalibration';
     def.OutputFcnSpec = 'void read_calibration_matrix(single y1[9])';
     def.HeaderFiles = {'calibration_matrix_rw.h'};
     def.SourceFiles = {'calibration_matrix_rw.c'};
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
 %/

%implements ReadCalibration "C"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
  %%
  %% The Target Language must be C
  %if ::GenCPP==1
    %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
  %endif

  %assign hdrFile = LibGetModelDotHFile()
  %assign srcFile = LibGetModelDotCFile()

  %openfile tmpBuf
  #ifndef CALIBRATION_FILE
  #define CALIBRATION_FILE "/home/pi/calibration.txt"
  #endif

  %closefile tmpBuf

  %<LibSetSourceFileSection(hdrFile,"Defines",tmpBuf)>

  %openfile tmpBuf
  #include <stdio.h>
  #include <stdlib.h>
  %closefile tmpBuf

  %<LibSetSourceFileSection(hdrFile,"Includes",tmpBuf)>

  %openfile tmpBuf
  static FILE *fpr;
  static char line[20];
  %closefile tmpBuf

  %<LibSetSourceFileSection(srcFile,"Declarations",tmpBuf)>
  
  %%
%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
  %%
  
    fpr = fopen(CALIBRATION_FILE, "r");
       
    %assign rollVars = ["Y"]
    %roll idx = RollRegions, lcv = RollThreshold, block, "Roller", rollVars
    if (fgets(line, 20, fpr) != NULL){
    %<LibBlockOutputSignal(0, "", lcv, idx)> = atof(line);
    }
    %endroll
     
    fclose(fpr);

  %%
%endfunction

%% [EOF]
