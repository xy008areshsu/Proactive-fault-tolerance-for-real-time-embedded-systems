%% File : WriteCalibration.tlc
%%
%% Description: 
%%   Simulink Coder TLC Code Generation file for WriteCalibration
%%
%% Simulink version      : 8.3 (R2014a) 27-Dec-2013
%% TLC file generated on : 05-Jun-2014 16:14:29

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'WriteCalibration';
     def.OutputFcnSpec = 'void write_calibration_matrix(single u1[9])';
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
 %/

%implements WriteCalibration "C"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
  %%
  %% The Target Language must be C
  %if ::GenCPP==1
    %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
  %endif

  %assign hdrFile = LibGetModelDotHFile()
  %assign srcFile = LibGetModelDotCFile()

  %openfile tmpBuf
  #ifndef CALIBRATION_FILE
  #define CALIBRATION_FILE "/home/pi/calibration.txt"
  #endif
  %closefile tmpBuf

  %<LibSetSourceFileSection(hdrFile,"Defines",tmpBuf)>

  %openfile tmpBuf
  #include <stdio.h>
  %closefile tmpBuf

  %<LibSetSourceFileSection(hdrFile,"Includes",tmpBuf)>

  %openfile tmpBuf
  static FILE *fpw;
  %closefile tmpBuf

  %<LibSetSourceFileSection(srcFile,"Declarations",tmpBuf)>


  %%
%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
  %%
  %<LibBlockSetIsExpressionCompliant(block)>
  %%
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
  %%
  fpw = fopen(CALIBRATION_FILE, "w");
    
  %assign rollVars = ["U"]
  %roll idx = RollRegions, lcv = RollThreshold, block, "Roller", rollVars
    fprintf(fpw, "%10.8f\n", %<LibBlockInputSignal(0, "", lcv, idx)>);
  %endroll
    
  fclose(fpw);

  %%
%endfunction

%% [EOF]
